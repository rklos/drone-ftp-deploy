#!/usr/bin/env node
const yargs = require('yargs/yargs');
const { hideBin } = require('yargs/helpers');
const argv = yargs(hideBin(process.argv))
  .boolean('debug')
  .boolean('sftp')
  .boolean('secure')
  .boolean('cleanDir')
  .env('PLUGIN')
  .argv;

const FtpDeploy = require('ftp-deploy');
const ftpDeploy = new FtpDeploy();

const config = {
  user: argv.ftpUsername,
  // Password optional, prompted if none given
  password: argv.ftpPassword,
  host: argv.ftpHostname,
  port: argv.ftpPort || 21,
  localRoot: process.env.PWD + (argv.srcDir || '/'),
  remoteRoot: argv.destDir || '/',
  include: argv.include?.split(',') || [ '**/*' ],
  exclude: argv.exclude?.split(',') || [],
  // delete ALL existing files at destination before uploading, if true
  deleteRemote: !!argv.cleanDir,
  forcePasv: true,
  // use sftp or ftp
  sftp: !!argv.sftp,
  // use ftps or ftp
  secure: !!argv.secure,
};

if (argv.debug) {
  console.log('DEPLOY CONFIG:');
  console.log(
    JSON.stringify(
      {
        ...config,
        // Replace password for security reasons
        password: config.password && '*****',
      },
      null,
      2),
  );
}

console.log('---');
console.log('DEPLOY STARTED');
console.log('---');

ftpDeploy.on('uploaded', (data) => {
  console.log('[ UPLOADED ]', data.filename);
});

ftpDeploy.on('upload-error', (data) => {
  console.log('[ ERROR ]', data.filename);
  if (argv.debug) {
    console.log(data.err);
  }
});

ftpDeploy
  .deploy(config)
  .then(() => {
    console.log('---');
    console.log('DEPLOY FINISHED');
    console.log('---');
  })
  .catch((err) => {
    console.log('---');
    console.log('DEPLOY FAILED');
    console.log('---');
    console.log(err)
  });